NotificationWatcher.swift
	public class NotificationWatcher
	public init(notificationName: String, object: AnyObject? = nil, startWatching: Bool = true, callback: (NSNotification) -> Void)
	public func stopWatching()
	public func resumeWatching()
	public class NotificationObjectWatcher<T>: NotificationWatcher
	public init(notificationName: String, object: AnyObject? = nil, startWatching: Bool = true, callback: (NSNotification, T) -> Void)
NSTimerExtension.swift
	public class func scheduledTimerWithTimeInterval(interval: NSTimeInterval, userInfo: AnyObject? = nil, repeats: Bool = false, callback: TimerFiredCallback)
        -> NSTimer
	public class func scheduledTimerWithFireDate(fireDate: NSDate, callback: TimerFiredCallback)
        -> NSTimer
	public class func scheduledTimerWithFireDate(fireDate: NSDate, repeatInterval: NSTimeInterval, callback: TimerFiredCallback)
        -> NSTimer
	public convenience init(fireDate: NSDate, callback: TimerFiredCallback)
	public convenience init(fireDate: NSDate, repeatInterval: NSTimeInterval, callback: TimerFiredCallback)
